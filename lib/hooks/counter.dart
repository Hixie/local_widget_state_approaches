import 'package:flutter/material.dart';
import 'package:flutter_hooks/flutter_hooks.dart';

/// This example emulates the basic Counter app generated by the
/// `flutter create` command to demonstrates the `useState` hook.
///
/// First, instead of a StatefulWidget, use a HookWidget instead!
class CounterHooks extends HookWidget {
  CounterHooks(this.title);
  final String title;
  @override
  Widget build(BuildContext context) {
    // Next, invoke the `useState` function with a default value to create a
    // `counter` variable that contains a `value`. Whenever the value is
    // changed, this Widget will be rebuilt!
    final counter = useState(0);

    return Scaffold(
      appBar: AppBar(
        title: Text('$title'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            // Read the current value from the counter
            Text(
              'You have pushed the button this many times:',
            ),
            Text(
              '${counter.value}',
              style: Theme.of(context).textTheme.headline4,
            ),
          ],
        ),
      ),
      floatingActionButton: FloatingActionButton(
        // When the button is pressed, update the value of the counter! This
        // will trigger a rebuild, displaying the latest value in the Text
        // Widget above!
        onPressed: () => counter.value++,
        child: const Icon(Icons.add),
      ),
    );
  }
}
